# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `json_matchers` gem.
# Please instead update this file by running `bin/tapioca gem json_matchers`.

# source://json_matchers//lib/json_matchers/version.rb#1
module JsonMatchers
  class << self
    # source://json_matchers//lib/json_matchers.rb#11
    def path_to_schema(schema_name); end

    # Returns the value of attribute schema_root.
    #
    # source://json_matchers//lib/json_matchers.rb#8
    def schema_root; end

    # Sets the attribute schema_root
    #
    # @param value the value to set the attribute schema_root to.
    #
    # source://json_matchers//lib/json_matchers.rb#8
    def schema_root=(_arg0); end
  end
end

# source://json_matchers//lib/json_matchers/errors.rb#2
class JsonMatchers::InvalidSchemaError < StandardError; end

# source://json_matchers//lib/json_matchers/matcher.rb#6
class JsonMatchers::Matcher
  # @return [Matcher] a new instance of Matcher
  #
  # source://json_matchers//lib/json_matchers/matcher.rb#7
  def initialize(schema_path); end

  # @return [Boolean]
  #
  # source://json_matchers//lib/json_matchers/matcher.rb#12
  def matches?(payload); end

  # source://json_matchers//lib/json_matchers/matcher.rb#18
  def validation_failure_message; end

  private

  # source://json_matchers//lib/json_matchers/matcher.rb#31
  def build_and_populate_document_store; end

  # Returns the value of attribute document_store.
  #
  # source://json_matchers//lib/json_matchers/matcher.rb#25
  def document_store; end

  # Returns the value of attribute errors.
  #
  # source://json_matchers//lib/json_matchers/matcher.rb#24
  def errors; end

  # Sets the attribute errors
  #
  # @param value the value to set the attribute errors to.
  #
  # source://json_matchers//lib/json_matchers/matcher.rb#24
  def errors=(_arg0); end

  # Returns the value of attribute schema_path.
  #
  # source://json_matchers//lib/json_matchers/matcher.rb#25
  def schema_path; end

  # source://json_matchers//lib/json_matchers/matcher.rb#43
  def traverse_schema_root_with_first_level_symlinks; end

  # source://json_matchers//lib/json_matchers/matcher.rb#27
  def validator; end
end

# source://json_matchers//lib/json_matchers/errors.rb#3
class JsonMatchers::MissingSchema < Errno::ENOENT; end

# source://json_matchers//lib/json_matchers/parser.rb#2
class JsonMatchers::Parser
  # @return [Parser] a new instance of Parser
  #
  # source://json_matchers//lib/json_matchers/parser.rb#3
  def initialize(schema_path); end

  # source://json_matchers//lib/json_matchers/parser.rb#7
  def parse; end

  private

  # source://json_matchers//lib/json_matchers/parser.rb#17
  def schema_data; end

  # Returns the value of attribute schema_path.
  #
  # source://json_matchers//lib/json_matchers/parser.rb#15
  def schema_path; end
end

# source://json_matchers//lib/json_matchers/version.rb#2
JsonMatchers::VERSION = T.let(T.unsafe(nil), String)

# source://json_matchers//lib/json_matchers/validator.rb#4
class JsonMatchers::Validator
  # @return [Validator] a new instance of Validator
  #
  # source://json_matchers//lib/json_matchers/validator.rb#5
  def initialize(document_store:, schema_path:); end

  # source://json_matchers//lib/json_matchers/validator.rb#10
  def validate(payload); end

  private

  # source://json_matchers//lib/json_matchers/validator.rb#26
  def build_json_schema_with_expanded_references; end

  # Returns the value of attribute document_store.
  #
  # source://json_matchers//lib/json_matchers/validator.rb#20
  def document_store; end

  # source://json_matchers//lib/json_matchers/validator.rb#22
  def json_schema; end

  # Returns the value of attribute schema_path.
  #
  # source://json_matchers//lib/json_matchers/validator.rb#20
  def schema_path; end
end
