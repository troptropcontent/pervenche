# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `parking_ticket` gem.
# Please instead update this file by running `bin/tapioca gem parking_ticket`.

# source://parking_ticket//lib/parking_ticket/configuration.rb#1
module ParkingTicket; end

# source://parking_ticket//lib/parking_ticket.rb#12
class ParkingTicket::Base
  # @return [Base] a new instance of Base
  #
  # source://parking_ticket//lib/parking_ticket.rb#27
  def initialize(adapter_name, configuration_attributes); end

  # source://parking_ticket//lib/parking_ticket.rb#33
  def adapter; end

  # Returns the value of attribute configuration.
  #
  # source://parking_ticket//lib/parking_ticket.rb#22
  def configuration; end

  # source://parking_ticket//lib/parking_ticket.rb#41
  def current_ticket; end

  # source://parking_ticket//lib/parking_ticket.rb#37
  def renew; end

  private

  # @raise [Error]
  #
  # source://parking_ticket//lib/parking_ticket.rb#47
  def load_adapter!; end

  # source://parking_ticket//lib/parking_ticket.rb#61
  def pay_by_phone_configuration; end

  # @raise [Error]
  #
  # source://parking_ticket//lib/parking_ticket.rb#71
  def prepare_easy_park_adapter!; end

  # @raise [Error]
  #
  # source://parking_ticket//lib/parking_ticket.rb#54
  def prepare_pay_by_phone_adapter!; end

  class << self
    # @raise [Error]
    # @return [Boolean]
    #
    # source://parking_ticket//lib/parking_ticket.rb#14
    def valid_credentials?(adapter_name, username, password); end
  end
end

# source://parking_ticket//lib/parking_ticket.rb#24
class ParkingTicket::Base::Error < ::StandardError; end

# source://parking_ticket//lib/client/pay_by_phone/configuration.rb#2
module ParkingTicket::Client; end

# source://parking_ticket//lib/client/pay_by_phone/configuration.rb#3
module ParkingTicket::Client::PayByPhone; end

# source://parking_ticket//lib/client/pay_by_phone/adapter.rb#4
class ParkingTicket::Client::PayByPhone::Adapter
  # @return [Adapter] a new instance of Adapter
  #
  # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#11
  def initialize(configuration); end

  # @return [Boolean]
  #
  # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#19
  def covered?; end

  # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#23
  def current_ticket; end

  # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#40
  def renew; end

  # @return [Boolean]
  #
  # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#15
  def valid_credentials?(_username, _password); end

  private

  # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#53
  def account_id; end

  # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#57
  def payment_method_id; end

  # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#63
  def rate_option_id; end

  # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#49
  def request; end

  class << self
    # @return [Boolean]
    #
    # source://parking_ticket//lib/client/pay_by_phone/adapter.rb#6
    def valid_credentials?(username, password); end
  end
end

# source://parking_ticket//lib/client/pay_by_phone/configuration.rb#4
class ParkingTicket::Client::PayByPhone::Configuration < ::ParkingTicket::Configuration
  # source://parking_ticket//lib/parking_ticket/configuration.rb#4
  def attr_required; end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#8
  def card_number; end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#11
  def card_number=(value); end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#8
  def license_plate; end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#11
  def license_plate=(value); end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#8
  def password; end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#11
  def password=(value); end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#8
  def username; end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#11
  def username=(value); end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#8
  def zipcode; end

  # source://parking_ticket//lib/parking_ticket/configuration.rb#11
  def zipcode=(value); end
end

# source://parking_ticket//lib/client/pay_by_phone/request.rb#5
class ParkingTicket::Client::PayByPhone::Request
  # @return [Request] a new instance of Request
  #
  # source://parking_ticket//lib/client/pay_by_phone/request.rb#33
  def initialize(configuration); end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#76
  def accounts; end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#115
  def connection; end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#107
  def member; end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#92
  def new_quote(rate_option_id, account_id); end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#41
  def new_ticket(account_id, parking_start_time, quote_id, payment_method_id); end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#111
  def payment_methods; end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#84
  def rate_options(account_id); end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#37
  def tickets(account_id); end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#127
  def token; end

  # source://parking_ticket//lib/client/pay_by_phone/request.rb#80
  def vehicles; end

  class << self
    # @return [Boolean]
    #
    # source://parking_ticket//lib/client/pay_by_phone/request.rb#7
    def valid_credentials?(username, password); end

    private

    # source://parking_ticket//lib/client/pay_by_phone/request.rb#13
    def auth(username, password); end
  end
end

# source://parking_ticket//lib/parking_ticket/configuration.rb#2
class ParkingTicket::Configuration
  # @return [Configuration] a new instance of Configuration
  # @yield [_self]
  # @yieldparam _self [ParkingTicket::Configuration] the object that the method was called on
  #
  # source://parking_ticket//lib/parking_ticket/configuration.rb#17
  def initialize; end

  # @return [Boolean]
  #
  # source://parking_ticket//lib/parking_ticket/configuration.rb#22
  def completed?; end

  class << self
    # source://parking_ticket//lib/parking_ticket/configuration.rb#3
    def attr_required(*configuration_keys); end
  end
end

# source://parking_ticket//lib/parking_ticket/version.rb#4
ParkingTicket::VERSION = T.let(T.unsafe(nil), String)
